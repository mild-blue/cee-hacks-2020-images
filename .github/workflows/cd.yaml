name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  build_backend:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - name: Set envs
        # set release version to the latest commit
        run: echo "RELEASE_VERSION=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Build docker image, push if the branch is master
        uses: docker/build-push-action@v1
        with:
          # login to repo
          repository: mildblue/cee-hacks-2020-images-backend
          dockerfile: Dockerfile.backend
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          # pass release_version
          build_args: release_version=${{ env.RELEASE_VERSION }}
          # tag the image with latest git tag
          tag_with_ref: true
          # add labels from the git
          add_git_labels: true
          # push only if this is build in the master branch
          push: ${{ startsWith(github.ref, 'refs/heads/master') }}

  build_worker:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - name: Set envs
        # set release version to the latest commit
        run: echo "RELEASE_VERSION=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Build docker image, push if the branch is master
        uses: docker/build-push-action@v1
        with:
          # login to repo
          repository: mildblue/cee-hacks-2020-images-worker
          dockerfile: Dockerfile.worker
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          # pass release_version
          build_args: release_version=${{ env.RELEASE_VERSION }}
          # tag the image with latest git tag
          tag_with_ref: true
          # add labels from the git
          add_git_labels: true
          # push only if this is build in the master branch
          push: ${{ startsWith(github.ref, 'refs/heads/master') }}


  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [build_worker, build_backend]
    steps:
      - uses: actions/checkout@v2

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Redeploy application
        if: ${{ startsWith(github.ref, 'refs/heads/master') }}
        run: |
          ./devops/redeploy_staging.sh
